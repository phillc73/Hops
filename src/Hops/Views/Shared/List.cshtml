@using Hops.Models;
@model ListModel

@*@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}*@

@{
    ViewBag.Title = "Hops";
}

<div class="panel panel-default">
    <table class="table sortable-theme-bootstrap" data-sortable>
        <thead>
            <tr>
                <th>Name</th>
                <th>Brewing usage</th>
                <th>Possible substitutions</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var hopModel in Model.List)
            {
                <tr>                  
                    <td><a href="/Hop/@hopModel.Hop.Id">@hopModel.Hop.Name</a></td>
                    <td>@hopModel.Hop.BrewingUsageString()</td>
                    <td>@Html.Raw(string.Join(", ", hopModel.Substitutions.Select(s => $"<a href=\"/Hop/{s.Id}\">{s.Name}</a>")))</td>
                    <td><span style="cursor: pointer;" class="hop-inv glyphicon glyphicon-star-empty" aria-hidden="true" aria-label="star" data-hop-id="@hopModel.Hop.Id" onclick="save(this);"></span></td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.NumberOfPages > 1)
{
    <div class="row">
        <div class="col-lg-6 col-lg-offset-3 text-center">
            <nav>
                <ul class="pagination">
                @if (Model.CurrentPageIndex > 1)
                {
                    <li>
                        <a href="~/@(string.IsNullOrEmpty(Model.SearchTerm) ? string.Empty : "Search/" + Model.SearchTerm + "/")@(Model.CurrentPageIndex - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.NumberOfPages; i++)
                {
                    <li @(Model.CurrentPageIndex == i ? "class=active" : string.Empty)>
                        <a href="~/@(string.IsNullOrEmpty(Model.SearchTerm) ? string.Empty : "Search/" + Model.SearchTerm + "/")@i">@i</a>
                    </li>
                }

                @if (Model.CurrentPageIndex != Model.NumberOfPages)
                {
                    <li>
                        <a href="~/@(string.IsNullOrEmpty(Model.SearchTerm) ? string.Empty : "Search/" + Model.SearchTerm + "/")@(Model.CurrentPageIndex + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
                </ul>
            </nav>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        var hopInv = [];

        var store = localStorage.getItem("hopInv");
        if (store !== null) {
            hopInv = JSON.parse(store);
        }

        $(".hop-inv").each(function (index) {
            var foundAtIndex = $.inArray($(this).data("hop-id"), hopInv);

            if (foundAtIndex > -1) {
                $(this).removeClass("glyphicon-star-empty");
                $(this).addClass("glyphicon-star");
            }
        });
    });

    function save(element) {
        var hopInv = [];

        var store = localStorage.getItem("hopInv");
        if (store !== null) {
            hopInv = JSON.parse(store);
        }

        var foundAtIndex = $.inArray($(element).data("hop-id"), hopInv);

        if (foundAtIndex > -1) {
            hopInv.splice(foundAtIndex, 1);
        } else {
            hopInv.push($(element).data("hop-id"));
        }

        $(element).toggleClass("glyphicon-star glyphicon-star-empty");

        localStorage.setItem("hopInv", JSON.stringify(hopInv));
        updateInventoryLink();
    }
</script>